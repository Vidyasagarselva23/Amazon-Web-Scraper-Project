# -*- coding: utf-8 -*-
"""Amzon_data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZmXofNWs7cJDO6KN1RgVdsIXFnZw5x52
"""

import os
import pandas as pd
from bs4 import BeautifulSoup

# File path
file_path = r"C:\Users\PC\OneDrive\Documents\Python Scripts\Amzon_webscraper\Amazon3.html"

# Read HTML file
with open(file_path, "r", encoding="utf-8") as file:
    soup = BeautifulSoup(file, "html.parser")

from bs4 import BeautifulSoup

from bs4 import BeautifulSoup
import pandas as pd
from google.colab import files

# Upload the HTML file
uploaded = files.upload()

if not uploaded:
    raise ValueError("No file uploaded. Please upload an HTML file.")

temp_filename = list(uploaded.keys())[0]

with open(temp_filename, "r", encoding="utf-8") as file:
    soup = BeautifulSoup(file, "html.parser")

if soup is None or soup.text.strip() == "":
    raise ValueError("The HTML file appears to be empty or unreadable.")

product_class = "puis-card-container s-card-container s-overflow-hidden aok-relative puis-include-content-margin puis puis-v11dj8q06qkhbp2r2lj79e0xe0k s-latency-cf-section puis-card-border"

products = soup.find_all("div", class_=product_class)

if not products:
    print("No product containers found. Please check the HTML file structure.")

names = []
prices = []
reviews = []

for product in products:
    try:
        name_tag = product.find("a", class_="a-link-normal s-line-clamp-2 s-link-style a-text-normal", target="_blank")
        name = name_tag.text.strip() if name_tag else ""
    except:
        name = ""

    try:
        price_tag = product.find("span", class_="a-price-whole")
        price = price_tag.text.strip() if price_tag else ""
    except:
        price = ""

    try:
        review_tag = product.find("span", class_="a-icon-alt")
        review = review_tag.text.strip() if review_tag else ""
    except:
        review = ""

    names.append(name)
    prices.append(price)
    reviews.append(review)

amazon_data = pd.DataFrame({
    "Name": names,
    "Price": prices,
    "Review": reviews
})

excel_filename = "Amazon_Products.xlsx"
amazon_data.to_excel(excel_filename, index=False)

files.download(excel_filename)

print("Data saved and downloaded as Amazon_Products.xlsx")